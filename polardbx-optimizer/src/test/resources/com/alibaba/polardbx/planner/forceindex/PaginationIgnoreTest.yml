SQL:
  - sql: |
      select * from pm_order_finish where partition_time > 10 order by user_id limit 0,10
    plan: |
      mergesort(sort="user_id asc", offset=?1, fetch=?2)
        logicalview(tables="pm_order_finish[p1p202409,p1p202410,p1p202411,p2p202409,p2p202410,p2p202411]", shardcount=6, sql="select `id`, `user_id`, `broker_id`, `s_id`, `biz_id`, `index_id`, `instrument_id`, `side`, `direction`, `margin_mode`, `price`, `handicapbest_price`, `amount`, `deal_amount`, `price_avg`, `close_amount`, `avg_cost`, `leverage`, `order_type`, `system_type`, `reduce_only`, `status`, `fee`, `fee_rate`, `rebate`, `source`, `cancel_source`, `close_profit`, `client_oid`, `tag`, `refer_id`, `margin_coin_id`, `last_fill_id`, `last_fill_price`, `last_fill_size`, `last_fill_time`, `contract_val`, `multiplier`, `liquidate_price`, `maintenance_ratio`, `unit_buffer`, `unit_treasury`, `remark`, `cost`, `tp_price`, `tp_trigger_type`, `tp_trigger_price`, `sl_price`, `sl_trigger_type`, `sl_trigger_price`, `stop_type`, `stop_order_type`, `sl_stop_order_type`, `tp_mode`, `ip`, `delta_type`, `trigger_target`, `options_medium_coin_amount`, `clq_req_id`, `quick_margin_type`, `sort_id`, `algo_client_oid`, `algo_id`, `stp_id`, `stp_mode`, `attach_algo_client_oid`, `px_vol`, `px_usd`, `attach_order_stop_list`, `linked_algo_order_id`, `extend_status_flag`, `ext`, `attachalgoords`, `partition_time`, `created_at`, `modified_at`, `create_time`, `modify_time`, `amend_px_on_trigger_type`, `deal_avg_price`, `truncated_modify_time` from `pm_order_finish` as `pm_order_finish` ignore index(`indx4`, `indx_userid_brokerid_sid`, `indx3`, `indx1`, `indx_userid_bizid_sid`, `idx_system_biz`, `indx_user_modify`, `indx_userid_bizid_instrumentid_modifytime`, `indx_userid_bizid_instrumentid`, `idx_userid_bizid_instrumentid`, `indx_userid_brokerid_sid_ordertype`, `indx_userid_brokerid_instrumentid_sid`, `indx1_new`) where (`partition_time` > ?) order by `user_id` limit (? + ?)")
  - sql: |
      select * from pm_order_finish where biz_id > 10 order by user_id limit 0,10
    plan: |
      mergesort(sort="user_id asc", offset=?1, fetch=?2)
        logicalview(tables="pm_order_finish[p1p202409,p1p202410,p1p202411,p2p202409,p2p202410,p2p202411]", shardcount=6, sql="select `id`, `user_id`, `broker_id`, `s_id`, `biz_id`, `index_id`, `instrument_id`, `side`, `direction`, `margin_mode`, `price`, `handicapbest_price`, `amount`, `deal_amount`, `price_avg`, `close_amount`, `avg_cost`, `leverage`, `order_type`, `system_type`, `reduce_only`, `status`, `fee`, `fee_rate`, `rebate`, `source`, `cancel_source`, `close_profit`, `client_oid`, `tag`, `refer_id`, `margin_coin_id`, `last_fill_id`, `last_fill_price`, `last_fill_size`, `last_fill_time`, `contract_val`, `multiplier`, `liquidate_price`, `maintenance_ratio`, `unit_buffer`, `unit_treasury`, `remark`, `cost`, `tp_price`, `tp_trigger_type`, `tp_trigger_price`, `sl_price`, `sl_trigger_type`, `sl_trigger_price`, `stop_type`, `stop_order_type`, `sl_stop_order_type`, `tp_mode`, `ip`, `delta_type`, `trigger_target`, `options_medium_coin_amount`, `clq_req_id`, `quick_margin_type`, `sort_id`, `algo_client_oid`, `algo_id`, `stp_id`, `stp_mode`, `attach_algo_client_oid`, `px_vol`, `px_usd`, `attach_order_stop_list`, `linked_algo_order_id`, `extend_status_flag`, `ext`, `attachalgoords`, `partition_time`, `created_at`, `modified_at`, `create_time`, `modify_time`, `amend_px_on_trigger_type`, `deal_avg_price`, `truncated_modify_time` from `pm_order_finish` as `pm_order_finish` where (`biz_id` > ?) order by `user_id` limit (? + ?)")
  - sql: |
      select * from pm_order_finish where partition_time > 10 order by user_id+1 limit 0,10
    plan: |
      project(id="id", user_id="user_id", broker_id="broker_id", s_id="s_id", biz_id="biz_id", index_id="index_id", instrument_id="instrument_id", side="side", direction="direction", margin_mode="margin_mode", price="price", handicapbest_price="handicapbest_price", amount="amount", deal_amount="deal_amount", price_avg="price_avg", close_amount="close_amount", avg_cost="avg_cost", leverage="leverage", order_type="order_type", system_type="system_type", reduce_only="reduce_only", status="status", fee="fee", fee_rate="fee_rate", rebate="rebate", source="source", cancel_source="cancel_source", close_profit="close_profit", client_oid="client_oid", tag="tag", refer_id="refer_id", margin_coin_id="margin_coin_id", last_fill_id="last_fill_id", last_fill_price="last_fill_price", last_fill_size="last_fill_size", last_fill_time="last_fill_time", contract_val="contract_val", multiplier="multiplier", liquidate_price="liquidate_price", maintenance_ratio="maintenance_ratio", unit_buffer="unit_buffer", unit_treasury="unit_treasury", remark="remark", cost="cost", tp_price="tp_price", tp_trigger_type="tp_trigger_type", tp_trigger_price="tp_trigger_price", sl_price="sl_price", sl_trigger_type="sl_trigger_type", sl_trigger_price="sl_trigger_price", stop_type="stop_type", stop_order_type="stop_order_type", sl_stop_order_type="sl_stop_order_type", tp_mode="tp_mode", ip="ip", delta_type="delta_type", trigger_target="trigger_target", options_medium_coin_amount="options_medium_coin_amount", clq_req_id="clq_req_id", quick_margin_type="quick_margin_type", sort_id="sort_id", algo_client_oid="algo_client_oid", algo_id="algo_id", stp_id="stp_id", stp_mode="stp_mode", attach_algo_client_oid="attach_algo_client_oid", px_vol="px_vol", px_usd="px_usd", attach_order_stop_list="attach_order_stop_list", linked_algo_order_id="linked_algo_order_id", extend_status_flag="extend_status_flag", ext="ext", attachalgoords="attachalgoords", partition_time="partition_time", created_at="created_at", modified_at="modified_at", create_time="create_time", modify_time="modify_time", amend_px_on_trigger_type="amend_px_on_trigger_type", deal_avg_price="deal_avg_price", truncated_modify_time="truncated_modify_time")
        mergesort(sort="(pm_order_finish.user_id + ?) asc", offset=?2, fetch=?3)
          logicalview(tables="pm_order_finish[p1p202409,p1p202410,p1p202411,p2p202409,p2p202410,p2p202411]", shardcount=6, sql="select `id`, `user_id`, `broker_id`, `s_id`, `biz_id`, `index_id`, `instrument_id`, `side`, `direction`, `margin_mode`, `price`, `handicapbest_price`, `amount`, `deal_amount`, `price_avg`, `close_amount`, `avg_cost`, `leverage`, `order_type`, `system_type`, `reduce_only`, `status`, `fee`, `fee_rate`, `rebate`, `source`, `cancel_source`, `close_profit`, `client_oid`, `tag`, `refer_id`, `margin_coin_id`, `last_fill_id`, `last_fill_price`, `last_fill_size`, `last_fill_time`, `contract_val`, `multiplier`, `liquidate_price`, `maintenance_ratio`, `unit_buffer`, `unit_treasury`, `remark`, `cost`, `tp_price`, `tp_trigger_type`, `tp_trigger_price`, `sl_price`, `sl_trigger_type`, `sl_trigger_price`, `stop_type`, `stop_order_type`, `sl_stop_order_type`, `tp_mode`, `ip`, `delta_type`, `trigger_target`, `options_medium_coin_amount`, `clq_req_id`, `quick_margin_type`, `sort_id`, `algo_client_oid`, `algo_id`, `stp_id`, `stp_mode`, `attach_algo_client_oid`, `px_vol`, `px_usd`, `attach_order_stop_list`, `linked_algo_order_id`, `extend_status_flag`, `ext`, `attachalgoords`, `partition_time`, `created_at`, `modified_at`, `create_time`, `modify_time`, `amend_px_on_trigger_type`, `deal_avg_price`, `truncated_modify_time`, (`user_id` + ?) as `(pm_order_finish.user_id + ?)` from `pm_order_finish` as `pm_order_finish` where (`partition_time` > ?) order by (`user_id` + ?) limit (? + ?)")
  - sql: |
      select * from pm_order_finish where partition_time > 10 order by id limit 0,10
    plan: |
      mergesort(sort="id asc", offset=?1, fetch=?2)
        logicalview(tables="pm_order_finish[p1p202409,p1p202410,p1p202411,p2p202409,p2p202410,p2p202411]", shardcount=6, sql="select `id`, `user_id`, `broker_id`, `s_id`, `biz_id`, `index_id`, `instrument_id`, `side`, `direction`, `margin_mode`, `price`, `handicapbest_price`, `amount`, `deal_amount`, `price_avg`, `close_amount`, `avg_cost`, `leverage`, `order_type`, `system_type`, `reduce_only`, `status`, `fee`, `fee_rate`, `rebate`, `source`, `cancel_source`, `close_profit`, `client_oid`, `tag`, `refer_id`, `margin_coin_id`, `last_fill_id`, `last_fill_price`, `last_fill_size`, `last_fill_time`, `contract_val`, `multiplier`, `liquidate_price`, `maintenance_ratio`, `unit_buffer`, `unit_treasury`, `remark`, `cost`, `tp_price`, `tp_trigger_type`, `tp_trigger_price`, `sl_price`, `sl_trigger_type`, `sl_trigger_price`, `stop_type`, `stop_order_type`, `sl_stop_order_type`, `tp_mode`, `ip`, `delta_type`, `trigger_target`, `options_medium_coin_amount`, `clq_req_id`, `quick_margin_type`, `sort_id`, `algo_client_oid`, `algo_id`, `stp_id`, `stp_mode`, `attach_algo_client_oid`, `px_vol`, `px_usd`, `attach_order_stop_list`, `linked_algo_order_id`, `extend_status_flag`, `ext`, `attachalgoords`, `partition_time`, `created_at`, `modified_at`, `create_time`, `modify_time`, `amend_px_on_trigger_type`, `deal_avg_price`, `truncated_modify_time` from `pm_order_finish` as `pm_order_finish` ignore index(`primary`) where (`partition_time` > ?) order by `id` limit (? + ?)")
  - sql: |
      select * from pm_order_finish where user_id in( 10) order by modified_at limit 0,10
    plan: |
      mergesort(sort="modified_at asc", offset=?1, fetch=?2)
        logicalview(tables="pm_order_finish[p2p202409,p2p202410,p2p202411]", shardcount=3, sql="select `id`, `user_id`, `broker_id`, `s_id`, `biz_id`, `index_id`, `instrument_id`, `side`, `direction`, `margin_mode`, `price`, `handicapbest_price`, `amount`, `deal_amount`, `price_avg`, `close_amount`, `avg_cost`, `leverage`, `order_type`, `system_type`, `reduce_only`, `status`, `fee`, `fee_rate`, `rebate`, `source`, `cancel_source`, `close_profit`, `client_oid`, `tag`, `refer_id`, `margin_coin_id`, `last_fill_id`, `last_fill_price`, `last_fill_size`, `last_fill_time`, `contract_val`, `multiplier`, `liquidate_price`, `maintenance_ratio`, `unit_buffer`, `unit_treasury`, `remark`, `cost`, `tp_price`, `tp_trigger_type`, `tp_trigger_price`, `sl_price`, `sl_trigger_type`, `sl_trigger_price`, `stop_type`, `stop_order_type`, `sl_stop_order_type`, `tp_mode`, `ip`, `delta_type`, `trigger_target`, `options_medium_coin_amount`, `clq_req_id`, `quick_margin_type`, `sort_id`, `algo_client_oid`, `algo_id`, `stp_id`, `stp_mode`, `attach_algo_client_oid`, `px_vol`, `px_usd`, `attach_order_stop_list`, `linked_algo_order_id`, `extend_status_flag`, `ext`, `attachalgoords`, `partition_time`, `created_at`, `modified_at`, `create_time`, `modify_time`, `amend_px_on_trigger_type`, `deal_avg_price`, `truncated_modify_time` from `pm_order_finish` as `pm_order_finish` ignore index(`idx_modified_at`) where (`user_id` in(?)) order by `modified_at` limit (? + ?)")
  - sql: |
      select * from pm_order_finish where (cost,user_id) in( (12,10)) order by id limit 0,10
    plan: |
      mergesort(sort="id asc", offset=?1, fetch=?2)
        logicalview(tables="pm_order_finish[p2p202409,p2p202410,p2p202411]", shardcount=3, sql="select `id`, `user_id`, `broker_id`, `s_id`, `biz_id`, `index_id`, `instrument_id`, `side`, `direction`, `margin_mode`, `price`, `handicapbest_price`, `amount`, `deal_amount`, `price_avg`, `close_amount`, `avg_cost`, `leverage`, `order_type`, `system_type`, `reduce_only`, `status`, `fee`, `fee_rate`, `rebate`, `source`, `cancel_source`, `close_profit`, `client_oid`, `tag`, `refer_id`, `margin_coin_id`, `last_fill_id`, `last_fill_price`, `last_fill_size`, `last_fill_time`, `contract_val`, `multiplier`, `liquidate_price`, `maintenance_ratio`, `unit_buffer`, `unit_treasury`, `remark`, `cost`, `tp_price`, `tp_trigger_type`, `tp_trigger_price`, `sl_price`, `sl_trigger_type`, `sl_trigger_price`, `stop_type`, `stop_order_type`, `sl_stop_order_type`, `tp_mode`, `ip`, `delta_type`, `trigger_target`, `options_medium_coin_amount`, `clq_req_id`, `quick_margin_type`, `sort_id`, `algo_client_oid`, `algo_id`, `stp_id`, `stp_mode`, `attach_algo_client_oid`, `px_vol`, `px_usd`, `attach_order_stop_list`, `linked_algo_order_id`, `extend_status_flag`, `ext`, `attachalgoords`, `partition_time`, `created_at`, `modified_at`, `create_time`, `modify_time`, `amend_px_on_trigger_type`, `deal_avg_price`, `truncated_modify_time` from `pm_order_finish` as `pm_order_finish` ignore index(`primary`) where (((`cost`, `user_id`)) in(?)) order by `id` limit (? + ?)")
  - sql: |
      select * from pm_order_finish where user_id = 10 order by modified_at limit 0,10
    plan: |
      mergesort(sort="modified_at asc", offset=?1, fetch=?2)
        logicalview(tables="pm_order_finish[p2p202409,p2p202410,p2p202411]", shardcount=3, sql="select `id`, `user_id`, `broker_id`, `s_id`, `biz_id`, `index_id`, `instrument_id`, `side`, `direction`, `margin_mode`, `price`, `handicapbest_price`, `amount`, `deal_amount`, `price_avg`, `close_amount`, `avg_cost`, `leverage`, `order_type`, `system_type`, `reduce_only`, `status`, `fee`, `fee_rate`, `rebate`, `source`, `cancel_source`, `close_profit`, `client_oid`, `tag`, `refer_id`, `margin_coin_id`, `last_fill_id`, `last_fill_price`, `last_fill_size`, `last_fill_time`, `contract_val`, `multiplier`, `liquidate_price`, `maintenance_ratio`, `unit_buffer`, `unit_treasury`, `remark`, `cost`, `tp_price`, `tp_trigger_type`, `tp_trigger_price`, `sl_price`, `sl_trigger_type`, `sl_trigger_price`, `stop_type`, `stop_order_type`, `sl_stop_order_type`, `tp_mode`, `ip`, `delta_type`, `trigger_target`, `options_medium_coin_amount`, `clq_req_id`, `quick_margin_type`, `sort_id`, `algo_client_oid`, `algo_id`, `stp_id`, `stp_mode`, `attach_algo_client_oid`, `px_vol`, `px_usd`, `attach_order_stop_list`, `linked_algo_order_id`, `extend_status_flag`, `ext`, `attachalgoords`, `partition_time`, `created_at`, `modified_at`, `create_time`, `modify_time`, `amend_px_on_trigger_type`, `deal_avg_price`, `truncated_modify_time` from `pm_order_finish` as `pm_order_finish` ignore index(`idx_modified_at`) where (`user_id` = ?) order by `modified_at` limit (? + ?)")
  - sql: |
      select * from pm_order_finish where (cost,user_id) = (12,10) order by id limit 0,10
    plan: |
      mergesort(sort="id asc", offset=?2, fetch=?3)
        logicalview(tables="pm_order_finish[p2p202409,p2p202410,p2p202411]", shardcount=3, sql="select `id`, `user_id`, `broker_id`, `s_id`, `biz_id`, `index_id`, `instrument_id`, `side`, `direction`, `margin_mode`, `price`, `handicapbest_price`, `amount`, `deal_amount`, `price_avg`, `close_amount`, `avg_cost`, `leverage`, `order_type`, `system_type`, `reduce_only`, `status`, `fee`, `fee_rate`, `rebate`, `source`, `cancel_source`, `close_profit`, `client_oid`, `tag`, `refer_id`, `margin_coin_id`, `last_fill_id`, `last_fill_price`, `last_fill_size`, `last_fill_time`, `contract_val`, `multiplier`, `liquidate_price`, `maintenance_ratio`, `unit_buffer`, `unit_treasury`, `remark`, `cost`, `tp_price`, `tp_trigger_type`, `tp_trigger_price`, `sl_price`, `sl_trigger_type`, `sl_trigger_price`, `stop_type`, `stop_order_type`, `sl_stop_order_type`, `tp_mode`, `ip`, `delta_type`, `trigger_target`, `options_medium_coin_amount`, `clq_req_id`, `quick_margin_type`, `sort_id`, `algo_client_oid`, `algo_id`, `stp_id`, `stp_mode`, `attach_algo_client_oid`, `px_vol`, `px_usd`, `attach_order_stop_list`, `linked_algo_order_id`, `extend_status_flag`, `ext`, `attachalgoords`, `partition_time`, `created_at`, `modified_at`, `create_time`, `modify_time`, `amend_px_on_trigger_type`, `deal_avg_price`, `truncated_modify_time` from `pm_order_finish` as `pm_order_finish` ignore index(`primary`) where ((`cost`, `user_id`) =(?, ?)) order by `id` limit (? + ?)")
  - sql: |
      select * from pm_order_finish where user_id != 10 order by id limit 0,10
    plan: |
      mergesort(sort="id asc", offset=?1, fetch=?2)
        logicalview(tables="pm_order_finish[p1p202409,p1p202410,p1p202411,p2p202409,p2p202410,p2p202411]", shardcount=6, sql="select `id`, `user_id`, `broker_id`, `s_id`, `biz_id`, `index_id`, `instrument_id`, `side`, `direction`, `margin_mode`, `price`, `handicapbest_price`, `amount`, `deal_amount`, `price_avg`, `close_amount`, `avg_cost`, `leverage`, `order_type`, `system_type`, `reduce_only`, `status`, `fee`, `fee_rate`, `rebate`, `source`, `cancel_source`, `close_profit`, `client_oid`, `tag`, `refer_id`, `margin_coin_id`, `last_fill_id`, `last_fill_price`, `last_fill_size`, `last_fill_time`, `contract_val`, `multiplier`, `liquidate_price`, `maintenance_ratio`, `unit_buffer`, `unit_treasury`, `remark`, `cost`, `tp_price`, `tp_trigger_type`, `tp_trigger_price`, `sl_price`, `sl_trigger_type`, `sl_trigger_price`, `stop_type`, `stop_order_type`, `sl_stop_order_type`, `tp_mode`, `ip`, `delta_type`, `trigger_target`, `options_medium_coin_amount`, `clq_req_id`, `quick_margin_type`, `sort_id`, `algo_client_oid`, `algo_id`, `stp_id`, `stp_mode`, `attach_algo_client_oid`, `px_vol`, `px_usd`, `attach_order_stop_list`, `linked_algo_order_id`, `extend_status_flag`, `ext`, `attachalgoords`, `partition_time`, `created_at`, `modified_at`, `create_time`, `modify_time`, `amend_px_on_trigger_type`, `deal_avg_price`, `truncated_modify_time` from `pm_order_finish` as `pm_order_finish` where (`user_id` <> ?) order by `id` limit (? + ?)")
  - sql: |
      select * from pm_order_finish where user_id > 10 order by id limit 0,10
    plan: |
      mergesort(sort="id asc", offset=?1, fetch=?2)
        logicalview(tables="pm_order_finish[p1p202409,p1p202410,p1p202411,p2p202409,p2p202410,p2p202411]", shardcount=6, sql="select `id`, `user_id`, `broker_id`, `s_id`, `biz_id`, `index_id`, `instrument_id`, `side`, `direction`, `margin_mode`, `price`, `handicapbest_price`, `amount`, `deal_amount`, `price_avg`, `close_amount`, `avg_cost`, `leverage`, `order_type`, `system_type`, `reduce_only`, `status`, `fee`, `fee_rate`, `rebate`, `source`, `cancel_source`, `close_profit`, `client_oid`, `tag`, `refer_id`, `margin_coin_id`, `last_fill_id`, `last_fill_price`, `last_fill_size`, `last_fill_time`, `contract_val`, `multiplier`, `liquidate_price`, `maintenance_ratio`, `unit_buffer`, `unit_treasury`, `remark`, `cost`, `tp_price`, `tp_trigger_type`, `tp_trigger_price`, `sl_price`, `sl_trigger_type`, `sl_trigger_price`, `stop_type`, `stop_order_type`, `sl_stop_order_type`, `tp_mode`, `ip`, `delta_type`, `trigger_target`, `options_medium_coin_amount`, `clq_req_id`, `quick_margin_type`, `sort_id`, `algo_client_oid`, `algo_id`, `stp_id`, `stp_mode`, `attach_algo_client_oid`, `px_vol`, `px_usd`, `attach_order_stop_list`, `linked_algo_order_id`, `extend_status_flag`, `ext`, `attachalgoords`, `partition_time`, `created_at`, `modified_at`, `create_time`, `modify_time`, `amend_px_on_trigger_type`, `deal_avg_price`, `truncated_modify_time` from `pm_order_finish` as `pm_order_finish` ignore index(`primary`) where (`user_id` > ?) order by `id` limit (? + ?)")
  - sql: |
      select * from pm_order_finish where user_id between 10 and 12 order by id limit 0,10
    plan: |
      mergesort(sort="id asc", offset=?2, fetch=?3)
        logicalview(tables="pm_order_finish[p1p202409,p1p202410,p1p202411,p2p202409,p2p202410,p2p202411]", shardcount=6, sql="select `id`, `user_id`, `broker_id`, `s_id`, `biz_id`, `index_id`, `instrument_id`, `side`, `direction`, `margin_mode`, `price`, `handicapbest_price`, `amount`, `deal_amount`, `price_avg`, `close_amount`, `avg_cost`, `leverage`, `order_type`, `system_type`, `reduce_only`, `status`, `fee`, `fee_rate`, `rebate`, `source`, `cancel_source`, `close_profit`, `client_oid`, `tag`, `refer_id`, `margin_coin_id`, `last_fill_id`, `last_fill_price`, `last_fill_size`, `last_fill_time`, `contract_val`, `multiplier`, `liquidate_price`, `maintenance_ratio`, `unit_buffer`, `unit_treasury`, `remark`, `cost`, `tp_price`, `tp_trigger_type`, `tp_trigger_price`, `sl_price`, `sl_trigger_type`, `sl_trigger_price`, `stop_type`, `stop_order_type`, `sl_stop_order_type`, `tp_mode`, `ip`, `delta_type`, `trigger_target`, `options_medium_coin_amount`, `clq_req_id`, `quick_margin_type`, `sort_id`, `algo_client_oid`, `algo_id`, `stp_id`, `stp_mode`, `attach_algo_client_oid`, `px_vol`, `px_usd`, `attach_order_stop_list`, `linked_algo_order_id`, `extend_status_flag`, `ext`, `attachalgoords`, `partition_time`, `created_at`, `modified_at`, `create_time`, `modify_time`, `amend_px_on_trigger_type`, `deal_avg_price`, `truncated_modify_time` from `pm_order_finish` as `pm_order_finish` ignore index(`primary`) where (`user_id` between ? and ?) order by `id` limit (? + ?)")
  - sql: |
      select * from pm_order_finish where user_id is null order by id limit 0,10
    plan: |
      mergesort(sort="id asc", offset=?0, fetch=?1)
        logicalview(tables="pm_order_finish[p1p202409,p1p202410,p1p202411]", shardcount=3, sql="select `id`, `user_id`, `broker_id`, `s_id`, `biz_id`, `index_id`, `instrument_id`, `side`, `direction`, `margin_mode`, `price`, `handicapbest_price`, `amount`, `deal_amount`, `price_avg`, `close_amount`, `avg_cost`, `leverage`, `order_type`, `system_type`, `reduce_only`, `status`, `fee`, `fee_rate`, `rebate`, `source`, `cancel_source`, `close_profit`, `client_oid`, `tag`, `refer_id`, `margin_coin_id`, `last_fill_id`, `last_fill_price`, `last_fill_size`, `last_fill_time`, `contract_val`, `multiplier`, `liquidate_price`, `maintenance_ratio`, `unit_buffer`, `unit_treasury`, `remark`, `cost`, `tp_price`, `tp_trigger_type`, `tp_trigger_price`, `sl_price`, `sl_trigger_type`, `sl_trigger_price`, `stop_type`, `stop_order_type`, `sl_stop_order_type`, `tp_mode`, `ip`, `delta_type`, `trigger_target`, `options_medium_coin_amount`, `clq_req_id`, `quick_margin_type`, `sort_id`, `algo_client_oid`, `algo_id`, `stp_id`, `stp_mode`, `attach_algo_client_oid`, `px_vol`, `px_usd`, `attach_order_stop_list`, `linked_algo_order_id`, `extend_status_flag`, `ext`, `attachalgoords`, `partition_time`, `created_at`, `modified_at`, `create_time`, `modify_time`, `amend_px_on_trigger_type`, `deal_avg_price`, `truncated_modify_time` from `pm_order_finish` as `pm_order_finish` ignore index(`primary`) where (`user_id` is null) order by `id` limit (? + ?)")
  - sql: |
      select * from pm_order_finish where user_id is not null order by id limit 0,10
    plan: |
      mergesort(sort="id asc", offset=?0, fetch=?1)
        logicalview(tables="pm_order_finish[p1p202409,p1p202410,p1p202411,p2p202409,p2p202410,p2p202411]", shardcount=6, sql="select `id`, `user_id`, `broker_id`, `s_id`, `biz_id`, `index_id`, `instrument_id`, `side`, `direction`, `margin_mode`, `price`, `handicapbest_price`, `amount`, `deal_amount`, `price_avg`, `close_amount`, `avg_cost`, `leverage`, `order_type`, `system_type`, `reduce_only`, `status`, `fee`, `fee_rate`, `rebate`, `source`, `cancel_source`, `close_profit`, `client_oid`, `tag`, `refer_id`, `margin_coin_id`, `last_fill_id`, `last_fill_price`, `last_fill_size`, `last_fill_time`, `contract_val`, `multiplier`, `liquidate_price`, `maintenance_ratio`, `unit_buffer`, `unit_treasury`, `remark`, `cost`, `tp_price`, `tp_trigger_type`, `tp_trigger_price`, `sl_price`, `sl_trigger_type`, `sl_trigger_price`, `stop_type`, `stop_order_type`, `sl_stop_order_type`, `tp_mode`, `ip`, `delta_type`, `trigger_target`, `options_medium_coin_amount`, `clq_req_id`, `quick_margin_type`, `sort_id`, `algo_client_oid`, `algo_id`, `stp_id`, `stp_mode`, `attach_algo_client_oid`, `px_vol`, `px_usd`, `attach_order_stop_list`, `linked_algo_order_id`, `extend_status_flag`, `ext`, `attachalgoords`, `partition_time`, `created_at`, `modified_at`, `create_time`, `modify_time`, `amend_px_on_trigger_type`, `deal_avg_price`, `truncated_modify_time` from `pm_order_finish` as `pm_order_finish` where (`user_id` is not null) order by `id` limit (? + ?)")
  - sql: |
      select * from pm_order_finish where not(user_id > 10) order by id limit 0,10
    plan: |
      mergesort(sort="id asc", offset=?1, fetch=?2)
        logicalview(tables="pm_order_finish[p1p202409,p1p202410,p1p202411,p2p202409,p2p202410,p2p202411]", shardcount=6, sql="select `id`, `user_id`, `broker_id`, `s_id`, `biz_id`, `index_id`, `instrument_id`, `side`, `direction`, `margin_mode`, `price`, `handicapbest_price`, `amount`, `deal_amount`, `price_avg`, `close_amount`, `avg_cost`, `leverage`, `order_type`, `system_type`, `reduce_only`, `status`, `fee`, `fee_rate`, `rebate`, `source`, `cancel_source`, `close_profit`, `client_oid`, `tag`, `refer_id`, `margin_coin_id`, `last_fill_id`, `last_fill_price`, `last_fill_size`, `last_fill_time`, `contract_val`, `multiplier`, `liquidate_price`, `maintenance_ratio`, `unit_buffer`, `unit_treasury`, `remark`, `cost`, `tp_price`, `tp_trigger_type`, `tp_trigger_price`, `sl_price`, `sl_trigger_type`, `sl_trigger_price`, `stop_type`, `stop_order_type`, `sl_stop_order_type`, `tp_mode`, `ip`, `delta_type`, `trigger_target`, `options_medium_coin_amount`, `clq_req_id`, `quick_margin_type`, `sort_id`, `algo_client_oid`, `algo_id`, `stp_id`, `stp_mode`, `attach_algo_client_oid`, `px_vol`, `px_usd`, `attach_order_stop_list`, `linked_algo_order_id`, `extend_status_flag`, `ext`, `attachalgoords`, `partition_time`, `created_at`, `modified_at`, `create_time`, `modify_time`, `amend_px_on_trigger_type`, `deal_avg_price`, `truncated_modify_time` from `pm_order_finish` as `pm_order_finish` where (not (`user_id` > ?)) order by `id` limit (? + ?)")
  - sql: |
      select * from pm_order_finish where user_id+1 > 10 and user_id < 12 order by id limit 0,10
    plan: |
      mergesort(sort="id asc", offset=?3, fetch=?4)
        logicalview(tables="pm_order_finish[p1p202409,p1p202410,p1p202411,p2p202409,p2p202410,p2p202411]", shardcount=6, sql="select `id`, `user_id`, `broker_id`, `s_id`, `biz_id`, `index_id`, `instrument_id`, `side`, `direction`, `margin_mode`, `price`, `handicapbest_price`, `amount`, `deal_amount`, `price_avg`, `close_amount`, `avg_cost`, `leverage`, `order_type`, `system_type`, `reduce_only`, `status`, `fee`, `fee_rate`, `rebate`, `source`, `cancel_source`, `close_profit`, `client_oid`, `tag`, `refer_id`, `margin_coin_id`, `last_fill_id`, `last_fill_price`, `last_fill_size`, `last_fill_time`, `contract_val`, `multiplier`, `liquidate_price`, `maintenance_ratio`, `unit_buffer`, `unit_treasury`, `remark`, `cost`, `tp_price`, `tp_trigger_type`, `tp_trigger_price`, `sl_price`, `sl_trigger_type`, `sl_trigger_price`, `stop_type`, `stop_order_type`, `sl_stop_order_type`, `tp_mode`, `ip`, `delta_type`, `trigger_target`, `options_medium_coin_amount`, `clq_req_id`, `quick_margin_type`, `sort_id`, `algo_client_oid`, `algo_id`, `stp_id`, `stp_mode`, `attach_algo_client_oid`, `px_vol`, `px_usd`, `attach_order_stop_list`, `linked_algo_order_id`, `extend_status_flag`, `ext`, `attachalgoords`, `partition_time`, `created_at`, `modified_at`, `create_time`, `modify_time`, `amend_px_on_trigger_type`, `deal_avg_price`, `truncated_modify_time` from `pm_order_finish` as `pm_order_finish` ignore index(`primary`) where (((`user_id` + ?) > ?) and (`user_id` < ?)) order by `id` limit (? + ?)")
  - sql: |
      select * from pm_order_finish where user_id > 10 or user_id < 12 order by id limit 0,10
    plan: |
      mergesort(sort="id asc", offset=?2, fetch=?3)
        logicalview(tables="pm_order_finish[p1p202409,p1p202410,p1p202411,p2p202409,p2p202410,p2p202411]", shardcount=6, sql="select `id`, `user_id`, `broker_id`, `s_id`, `biz_id`, `index_id`, `instrument_id`, `side`, `direction`, `margin_mode`, `price`, `handicapbest_price`, `amount`, `deal_amount`, `price_avg`, `close_amount`, `avg_cost`, `leverage`, `order_type`, `system_type`, `reduce_only`, `status`, `fee`, `fee_rate`, `rebate`, `source`, `cancel_source`, `close_profit`, `client_oid`, `tag`, `refer_id`, `margin_coin_id`, `last_fill_id`, `last_fill_price`, `last_fill_size`, `last_fill_time`, `contract_val`, `multiplier`, `liquidate_price`, `maintenance_ratio`, `unit_buffer`, `unit_treasury`, `remark`, `cost`, `tp_price`, `tp_trigger_type`, `tp_trigger_price`, `sl_price`, `sl_trigger_type`, `sl_trigger_price`, `stop_type`, `stop_order_type`, `sl_stop_order_type`, `tp_mode`, `ip`, `delta_type`, `trigger_target`, `options_medium_coin_amount`, `clq_req_id`, `quick_margin_type`, `sort_id`, `algo_client_oid`, `algo_id`, `stp_id`, `stp_mode`, `attach_algo_client_oid`, `px_vol`, `px_usd`, `attach_order_stop_list`, `linked_algo_order_id`, `extend_status_flag`, `ext`, `attachalgoords`, `partition_time`, `created_at`, `modified_at`, `create_time`, `modify_time`, `amend_px_on_trigger_type`, `deal_avg_price`, `truncated_modify_time` from `pm_order_finish` as `pm_order_finish` where ((`user_id` > ?) or (`user_id` < ?)) order by `id` limit (? + ?)")
DDL:
  pm_order_finish:
    CREATE TABLE `pm_order_finish` (
    `id` bigint(20) NOT NULL, `user_id` bigint(20) NOT NULL, `broker_id` int(11) NOT NULL DEFAULT '0', `s_id` bigint(20) DEFAULT '0', `biz_id` tinyint(4) NOT NULL, `index_id` int(11) NOT NULL DEFAULT '0', `instrument_id` bigint(20) NOT NULL, `side` tinyint(4) NOT NULL, `direction` tinyint(4) NOT NULL DEFAULT '0', `margin_mode` tinyint(4) NOT NULL, `price` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000', `handicapBest_price` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000', `amount` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000', `deal_amount` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000', `price_avg` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000', `close_amount` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000', `avg_cost` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000', `leverage` decimal(16, 8) NOT NULL DEFAULT '0.00000000', `order_type` tinyint(4) NOT NULL, `system_type` tinyint(4) NOT NULL DEFAULT '0', `reduce_only` tinyint(1) NOT NULL, `status` tinyint(4) NOT NULL, `fee` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000', `fee_rate` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000', `rebate` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000', `source` tinyint(4) NOT NULL, `cancel_source` tinyint(4) NOT NULL DEFAULT '0', `close_profit` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000', `client_oid` varchar(64) DEFAULT NULL, `tag` varchar(32) DEFAULT NULL, `refer_id` bigint(20) NOT NULL DEFAULT '0', `margin_coin_id` int(11) DEFAULT NULL, `last_fill_id` bigint(20) DEFAULT '0', `last_fill_price` decimal(32, 16) DEFAULT '0.0000000000000000', `last_fill_size` decimal(32, 16) DEFAULT '0.0000000000000000', `last_fill_time` bigint(20) DEFAULT '0', `contract_val` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000', `multiplier` decimal(16, 4) NOT NULL DEFAULT '1.0000', `liquidate_price` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000', `maintenance_ratio` decimal(16, 8) NOT NULL DEFAULT '0.00000000', `unit_buffer` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000', `unit_treasury` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000', `remark` varchar(64) DEFAULT NULL, `cost` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000', `tp_price` decimal(32, 16) DEFAULT '0.0000000000000000', `tp_trigger_type` tinyint(4) NOT NULL DEFAULT '0', `tp_trigger_price` decimal(32, 16) DEFAULT '0.0000000000000000', `sl_price` decimal(32, 16) DEFAULT '0.0000000000000000', `sl_trigger_type` tinyint(4) NOT NULL DEFAULT '0', `sl_trigger_price` decimal(32, 16) DEFAULT '0.0000000000000000', `stop_type` tinyint(4) NOT NULL DEFAULT '0', `stop_order_type` tinyint(4) NOT NULL DEFAULT '0', `sl_stop_order_type` tinyint(4) NOT NULL DEFAULT '0', `tp_mode` tinyint(4) NOT NULL DEFAULT '0', `ip` varchar(128) DEFAULT '', `delta_type` tinyint(4) NOT NULL DEFAULT '0', `trigger_target` tinyint(4) NOT NULL DEFAULT '0', `options_medium_coin_amount` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000', `clq_req_id` bigint(20) DEFAULT '0', `quick_margin_type` tinyint(4) NOT NULL DEFAULT '0', `sort_id` bigint(20) DEFAULT '0', `algo_client_oid` varchar(64) DEFAULT NULL, `algo_id` varchar(64) DEFAULT NULL, `stp_id` int(11) NOT NULL DEFAULT '0', `stp_mode` tinyint(4) NOT NULL DEFAULT '0', `attach_algo_client_oid` varchar(64) DEFAULT NULL, `px_vol` decimal(16, 8) NOT NULL DEFAULT '0.00000000', `px_usd` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000', `attach_order_stop_list` text, `linked_algo_order_id` bigint(20) NOT NULL DEFAULT '0', `extend_status_flag` int(11) NOT NULL DEFAULT '0', `ext` json DEFAULT NULL, `attachAlgoOrds` json DEFAULT NULL, `partition_time` datetime(3) NOT NULL, `created_at` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3), `modified_at` timestamp(3) NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3), `create_time` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3), `modify_time` timestamp(3) NULL DEFAULT CURRENT_TIMESTAMP(3), `amend_px_on_trigger_type` int(11) DEFAULT NULL, `deal_avg_price` decimal(32, 16) DEFAULT '0.0000000000000000', `truncated_modify_time` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00', PRIMARY KEY (`id`), KEY `indx4` (`user_id`, `client_oid`, `id`, `broker_id`, `instrument_id`, `biz_id`, `order_type`, `system_type`, `source`, `create_time`, `modify_time`, `partition_time`, `s_id`), KEY `idx_system_biz` (`user_id`, `biz_id`, `system_type`, `id`, `broker_id`, `instrument_id`, `order_type`, `source`, `client_oid`, `create_time`, `modify_time`, `partition_time`, `s_id`), KEY `idx_userid_bizid_instrumentid` (`user_id`, `biz_id`, `instrument_id`, `id`, `broker_id`, `order_type`, `system_type`, `modify_time`, `partition_time`, `s_id`, `source`, `status`, `margin_coin_id`, `index_id`, `direction`, `side`), KEY `indx_userid_bizid_instrumentid` (`user_id`, `biz_id`, `instrument_id`, `id`, `broker_id`, `order_type`, `system_type`, `modify_time`, `partition_time`, `s_id`, `source`, `status`, `margin_coin_id`, `index_id`), KEY `indx3` (`user_id`, `biz_id`, `id`, `broker_id`, `instrument_id`, `order_type`, `system_type`, `modify_time`, `partition_time`, `s_id`, `margin_coin_id`, `index_id`, `source`, `status`), KEY `indx1` (`user_id`, `id`, `broker_id`, `instrument_id`, `biz_id`, `order_type`, `system_type`, `source`, `modify_time`, `partition_time`, `s_id`, `margin_coin_id`, `index_id`, `status`), KEY `indx_userid_bizid_instrumentid_modifytime` (`user_id`, `biz_id`, `instrument_id`, `modify_time`, `broker_id`, `order_type`, `system_type`, `partition_time`, `s_id`, `source`, `status`, `margin_coin_id`, `index_id`), KEY `indx_userid_bizid_sid` (`user_id`, `biz_id`, `s_id`, `id`, `broker_id`, `order_type`, `source`, `partition_time`), KEY `indx_userid_brokerid_sid` (`user_id`, `broker_id`, `s_id`, `id`, `order_type`, `source`, `partition_time`), KEY `indx_userid_brokerid_instrumentid_sid` (`user_id`, `broker_id`, `instrument_id`, `s_id`, `id`, `order_type`, `source`, `partition_time`), KEY `indx_userid_brokerid_sid_ordertype` (`user_id`, `broker_id`, `s_id`, `order_type`, `id`, `source`, `status`, `partition_time`), KEY `idx_modified_at` (`modified_at`), KEY `indx_user_modify` (`user_id`, `modify_time`), KEY `idx_modify_time` (`modify_time`), KEY `auto_shard_key_partition_time` USING BTREE (`partition_time`), KEY `indx1_new` (`user_id`, `broker_id`, `id`, `instrument_id`, `biz_id`, `order_type`, `system_type`, `source`, `modify_time`, `partition_time`, `s_id`, `margin_coin_id`, `index_id`, `status`) )
    ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 PARTITION BY KEY(`user_id`) PARTITIONS 2
    SUBPARTITION BY RANGE(TO_DAYS(`partition_time`))
    (SUBPARTITION `p202409` VALUES LESS THAN (739525),
    SUBPARTITION `p202410` VALUES LESS THAN (739556),
    SUBPARTITION `p202411` VALUES LESS THAN (739586))
STATISTICS:
  pm_order_finish:
    100
CONFIG:
  ENABLE_AUTO_FORCE_INDEX:
    true
  ENABLE_AUTO_PAGINATION_INDEX:
    true
  ENABLE_AUTO_PAGINATION_IGNORE_INDEX:
    true
  ENABLE_AUTO_PAGINATION_PAGING_FORCE:
    true
  defaltxxAPPName.isNew:
    true
