## DISABLE_FAST_SQL_PARSER
set @auto_partition=true;
CREATE TABLE `test1` (
`id` bigint(20) NOT NULL AUTO_INCREMENT,
`warehouseCode` varchar(50) NOT NULL,
`code` varchar(50) NOT NULL,
PRIMARY KEY USING BTREE (`id`)
) ENGINE = InnoDB DEFAULT CHARSET = utf8 ROW_FORMAT = DYNAMIC;
CREATE TABLE `test2` (
`id` bigint(20) NOT NULL AUTO_INCREMENT,
`shipmentId` bigint(20) NOT NULL,
`warehouseCode` varchar(50) NOT NULL,
`shipmentCode` varchar(50) NOT NULL,
PRIMARY KEY USING BTREE (`id`),
INDEX `idx1` USING BTREE (`shipmentId`),
INDEX `idx2` USING BTREE (`shipmentCode`, `warehouseCode`)
) ENGINE = InnoDB DEFAULT CHARSET = utf8 ROW_FORMAT = DYNAMIC;
CREATE TABLE `test3` (
`id` bigint(20) NOT NULL AUTO_INCREMENT,
`shipmentId` bigint(20) NOT NULL,
`warehouseCode` varchar(50) NULL,
`shipmentCode` varchar(50) NULL,
PRIMARY KEY USING BTREE (`id`)
) ENGINE = InnoDB DEFAULT CHARSET = utf8 ROW_FORMAT = DYNAMIC;

insert into test1 values (1, '1', '1');
insert into test1 values (2, '2', '2');
insert into test1 values (3, '1', '1');
insert into test1 values (4, '1', '1');

insert into test2 values (1, 1, '1', '1');
insert into test2 values (2, 2, '2', '2');
insert into test2 values (3, 3, '3', '3');
insert into test2 values (4, 3, '3', '2');

/*+TDDL:ENBALE_MPP=false*/ SELECT 1 FROM test1 sh LEFT JOIN test2 sd force index(idx2) ON  sd.shipmentId=sh.id AND sd.shipmentCode=sh.code;
/*+TDDL:ENBALE_MPP=false*/ SELECT 1 FROM test1 sh LEFT JOIN test2 sd force index(idx2) ON  sd.shipmentId=sh.id AND sd.shipmentCode=sh.code;
/*+TDDL:ENBALE_MPP=false*/ SELECT 1 FROM test1 sh LEFT JOIN test2 sd force index(idx2) ON sd.shipmentCode=sh.code AND  sd.shipmentId=sh.id;
/*+TDDL:ENBALE_MPP=false*/ SELECT 1 FROM test1 sh LEFT JOIN test2 sd force index(idx2) ON sd.shipmentId=sh.id  AND sd.shipmentCode=sh.code WHERE  sh.warehouseCode='1';
/*+TDDL:ENBALE_MPP=false*/ SELECT 1 FROM test1 sh LEFT JOIN test2 sd force index(idx1) ON sd.shipmentId=sh.id  AND sd.shipmentCode=sh.code WHERE  sh.warehouseCode='1';
/*+TDDL:ENBALE_MPP=false*/ SELECT 1 FROM test1 sh INNER JOIN test2 sd force index(idx2) ON sd.shipmentId=sh.id  AND sd.shipmentCode=sh.code WHERE  sh.warehouseCode='1';
SELECT 1 FROM test1 sh inner JOIN test2 sd force index(idx1) ON sd.shipmentId=sh.id  WHERE  sh.warehouseCode='021DC1';
/*+TDDL:BKA_JOIN(test1, test2)*/ SELECT 1 FROM test1 sh inner JOIN test2 sd force index(idx2) ON sd.shipmentCode=sh.warehouseCode;
CREATE TABLE `pm_order_finish` (
`id` bigint(20) NOT NULL,
`user_id` bigint(20) NOT NULL,
`broker_id` int(11) NOT NULL DEFAULT '0',
`s_id` bigint(20) DEFAULT '0',
`biz_id` tinyint(4) NOT NULL,
`index_id` int(11) NOT NULL DEFAULT '0',
`instrument_id` bigint(20) NOT NULL,
`side` tinyint(4) NOT NULL,
`direction` tinyint(4) NOT NULL DEFAULT '0',
`margin_mode` tinyint(4) NOT NULL,
`price` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000',
`handicapBest_price` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000',
`amount` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000',
`deal_amount` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000',
`price_avg` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000',
`close_amount` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000',
`avg_cost` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000',
`leverage` decimal(16, 8) NOT NULL DEFAULT '0.00000000',
`order_type` tinyint(4) NOT NULL,
`system_type` tinyint(4) NOT NULL DEFAULT '0',
`reduce_only` tinyint(1) NOT NULL,
`status` tinyint(4) NOT NULL,
`fee` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000',
`fee_rate` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000',
`rebate` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000',
`source` tinyint(4) NOT NULL,
`cancel_source` tinyint(4) NOT NULL DEFAULT '0',
`close_profit` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000',
`client_oid` varchar(64) DEFAULT NULL,
`tag` varchar(32) DEFAULT NULL,
`refer_id` bigint(20) NOT NULL DEFAULT '0',
`margin_coin_id` int(11) DEFAULT NULL,
`last_fill_id` bigint(20) DEFAULT '0',
`last_fill_price` decimal(32, 16) DEFAULT '0.0000000000000000',
`last_fill_size` decimal(32, 16) DEFAULT '0.0000000000000000',
`last_fill_time` bigint(20) DEFAULT '0',
`contract_val` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000',
`multiplier` decimal(16, 4) NOT NULL DEFAULT '1.0000',
`liquidate_price` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000',
`maintenance_ratio` decimal(16, 8) NOT NULL DEFAULT '0.00000000',
`unit_buffer` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000',
`unit_treasury` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000',
`remark` varchar(64) DEFAULT NULL,
`cost` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000',
`tp_price` decimal(32, 16) DEFAULT '0.0000000000000000',
`tp_trigger_type` tinyint(4) NOT NULL DEFAULT '0',
`tp_trigger_price` decimal(32, 16) DEFAULT '0.0000000000000000',
`sl_price` decimal(32, 16) DEFAULT '0.0000000000000000',
`sl_trigger_type` tinyint(4) NOT NULL DEFAULT '0',
`sl_trigger_price` decimal(32, 16) DEFAULT '0.0000000000000000',
`stop_type` tinyint(4) NOT NULL DEFAULT '0',
`stop_order_type` tinyint(4) NOT NULL DEFAULT '0',
`sl_stop_order_type` tinyint(4) NOT NULL DEFAULT '0',
`tp_mode` tinyint(4) NOT NULL DEFAULT '0',
`ip` varchar(128) DEFAULT '',
`delta_type` tinyint(4) NOT NULL DEFAULT '0',
`trigger_target` tinyint(4) NOT NULL DEFAULT '0',
`options_medium_coin_amount` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000',
`clq_req_id` bigint(20) DEFAULT '0',
`quick_margin_type` tinyint(4) NOT NULL DEFAULT '0',
`sort_id` bigint(20) DEFAULT '0',
`algo_client_oid` varchar(64) DEFAULT NULL,
`algo_id` varchar(64) DEFAULT NULL,
`stp_id` int(11) NOT NULL DEFAULT '0',
`stp_mode` tinyint(4) NOT NULL DEFAULT '0',
`attach_algo_client_oid` varchar(64) DEFAULT NULL,
`px_vol` decimal(16, 8) NOT NULL DEFAULT '0.00000000',
`px_usd` decimal(32, 16) NOT NULL DEFAULT '0.0000000000000000',
`attach_order_stop_list` text,
`linked_algo_order_id` bigint(20) NOT NULL DEFAULT '0',
`extend_status_flag` int(11) NOT NULL DEFAULT '0',
`ext` json DEFAULT NULL,
`attachAlgoOrds` json DEFAULT NULL,
`partition_time` datetime(3) NOT NULL,
`created_at` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
`modified_at` timestamp(3) NULL DEFAULT CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3),
`create_time` timestamp(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
`modify_time` timestamp(3) NULL DEFAULT CURRENT_TIMESTAMP(3),
`amend_px_on_trigger_type` int(11) DEFAULT NULL,
`deal_avg_price` decimal(32, 16) DEFAULT '0.0000000000000000',
PRIMARY KEY (`id`),
KEY `idx_modified_at` (`modified_at`),
KEY `indx1` (`user_id`, `id`, `broker_id`, `instrument_id`, `biz_id`, `order_type`, `system_type`, `client_oid`, `source`, `create_time`, `modify_time`, `partition_time`, `s_id`),
KEY `indx4` (`user_id`, `client_oid`, `id`, `broker_id`, `instrument_id`, `biz_id`, `order_type`, `system_type`, `source`, `create_time`, `modify_time`, `partition_time`, `s_id`),
KEY `indx3` (`user_id`, `biz_id`, `id`, `broker_id`, `instrument_id`, `order_type`, `system_type`, `client_oid`, `create_time`, `modify_time`, `partition_time`, `s_id`),
KEY `idx_system_biz` (`user_id`, `biz_id`, `system_type`, `id`, `broker_id`, `instrument_id`, `order_type`, `source`, `client_oid`, `create_time`, `modify_time`, `partition_time`, `s_id`),
KEY `auto_shard_key_partition_time` USING BTREE (`partition_time`)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4
PARTITION BY KEY(`user_id`) PARTITIONS 4;

explain /*+TDDL:IN_TO_UNION_STRICT_MODE=2 ENABLE_IN_TO_EXPAND_IN=true index(pm_order_finish,indx1)*/SELECT * from pm_order_finish WHERE user_id = 23228846 AND broker_id = 0 AND order_type IN (2, 8, 1, 5, 3, 9, 4, 7, 6, 14, 11, 12, 13) AND (s_id = 0 OR source IN (17)) AND source != 33 ORDER BY id DESC LIMIT 0, 40;

/*+TDDL:IN_TO_UNION_STRICT_MODE=2 ENABLE_IN_TO_EXPAND_IN=true index(pm_order_finish,indx1)*/SELECT * from pm_order_finish WHERE user_id = 23228846 AND broker_id = 0 AND order_type IN (2, 8, 1, 5, 3, 9, 4, 7, 6, 14, 11, 12, 13) AND (s_id = 0 OR source IN (17)) AND source != 33 ORDER BY id DESC LIMIT 0, 40;