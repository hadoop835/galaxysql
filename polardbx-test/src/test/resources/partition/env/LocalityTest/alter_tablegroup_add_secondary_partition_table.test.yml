storageList: [$dn1, $dn2]
dbName: "test_locality_add_secondary_partition"
testCases:
  - prepareDDls:
      - "use polardbx"
      - "drop database if exists test_locality_add_secondary_partition "
      - "create database test_locality_add_secondary_partition mode = auto"
      - "use test_locality_add_secondary_partition;"
      - "CREATE TABLE `t1` (
         `id` bigint NOT NULL,
         `c1` bigint NOT NULL,
         `c2` bigint NOT NULL,
         PRIMARY KEY (`id`)
         ) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 DEFAULT COLLATE = utf8mb4_general_ci
         PARTITION BY LIST(`c1`)
         SUBPARTITION BY KEY(`c2`,`id`)
         (
         PARTITION p1 VALUES IN (1001) SUBPARTITIONS 2,
         PARTITION p2 VALUES IN (1002) SUBPARTITIONS 3,
         PARTITION pd VALUES IN (default) SUBPARTITIONS 4
         );"
    rejectDDls:
    cleanupDDls:
      - "use polardbx;"
      - "use polardbx;"
    checkActions:
      localityValueCheck:
        - t1 table ""
      tableGroupMatchCheck:
        - t1 $tg1 ""
      # second pass;
      # auto generate create table, tablegroup.
      partitionLocalityCheck:
        - $tg1.p1sp1 ""
        - $tg1.p2sp1 ""
        - $tg1.pdsp1 ""
      topologyCheck:
        - t1.p1sp1 partition ""
        - t1.p2sp1 partition ""
        - t1.pdsp1 partition ""
        #  auto generate by locality value check.
        #  auto generate by partition locality check. with each table.
  - prepareDDls:
      - "use test_locality_add_secondary_partition;"
      - "alter tablegroup $tg1 add partition (partition p3 VALUES IN(1003) locality='dn=$dn1' subpartitions 2)"
    rejectDDls:
    cleanupDDls:
      - "use polardbx;"
      - "use polardbx;"
    checkActions:
      localityValueCheck:
        - t1 table ""
      tableGroupMatchCheck:
        - t1 $tg1 ""
      # second pass;
      # auto generate create table, tablegroup.
      partitionLocalityCheck:
        - $tg1.p1sp1 ""
        - $tg1.p2sp1 ""
        - $tg1.pdsp1 ""
        - $tg1.p3sp1 ""
      topologyCheck:
        - t1.p1sp1 partition ""
        - t1.p2sp1 partition ""
        - t1.p3sp1 partition $dn1
        - t1.p3sp2 partition $dn1
        - t1.pdsp1 partition ""
cleanupDDls:
  - "use polardbx;"
  - "use polardbx;"
  - "drop database if exists test_locality_add_secondary_partition;"
